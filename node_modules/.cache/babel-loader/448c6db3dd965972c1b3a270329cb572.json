{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\colli\\\\Documents\\\\GitHub\\\\Sundays-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\colli\\\\Documents\\\\GitHub\\\\Sundays-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\colli\\\\Documents\\\\Github\\\\Sundays-Frontend\\\\src\\\\Components\\\\ClassPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport '../Component-CSS/ClassPage.css';\nimport { useParams } from 'react-router-dom';\nimport { getAssignmentTypesForClass, updateAssignment } from '../services';\nimport Navibar from './Navibar';\nimport { Card, Button } from 'react-bootstrap';\n\nfunction ClassPage() {\n  var _this = this;\n\n  var params = useParams();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      assesGotten = _useState2[0],\n      setAssesGotten = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      asses = _useState4[0],\n      setAsses = _useState4[1];\n\n  var _useState5 = useState([[]]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayedAss = _useState6[0],\n      setDisplayedAss = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editing = _useState8[0],\n      setEditing = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      firstTime = _useState10[0],\n      setFirstTime = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rerun = _useState12[0],\n      setRereun = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      reload = _useState14[0],\n      setReload = _useState14[1];\n\n  useEffect(function () {\n    var promise = getAssignmentTypesForClass(params['id']);\n    promise.then(function (data) {\n      setAsses(data);\n      setAssesGotten(true);\n    });\n  }, [reload]);\n  var cards = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  });\n  var today = new Date();\n  var return_class_card = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  });\n\n  if (assesGotten) {\n    //Hold array of assignmen type averages\n    var ass_type_averages = [];\n    var total_average = 0;\n    var ass_type_count = 0;\n    var total_weight = 0; //Calculate the average for each assignment type\n\n    Object.keys(asses).forEach(function (key, key_index) {\n      var sum = 0;\n      var count = 0;\n      Object.keys(asses[key]).forEach(function (ass, ass_index) {\n        if (asses[key][ass]['completed']) {\n          count += 1;\n          sum = sum + parseFloat(asses[key][ass]['grade']);\n        }\n      });\n      ass_type_averages[key] = sum / count;\n\n      if (ass_type_averages[key] != 0 && !isNaN(ass_type_averages[key])) {\n        var weighted_avg = parseFloat(ass_type_averages[key]) * parseFloat(asses[key][asses[key].length - 1] / 100);\n        total_average += weighted_avg;\n        ass_type_count++;\n        total_weight += asses[key][asses[key].length - 1];\n      }\n    });\n    total_average = total_average * (100 / total_weight);\n    return_class_card = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"class-avg-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Class Average\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, total_average.toFixed(2))));\n    var newDisplayedAss = createDisplayOject(asses);\n    cards = Object.keys(asses).map(function (key, key_index) {\n      var ass_cards = Object.keys(asses[key]).map(function (ass, ass_index) {\n        if (ass_index === asses[key].length - 1) return; //Create the readable date\n\n        var dat = new Date(asses[key][ass]['due_date']); //Display a color based on the due date for the assignment\n\n        var ass_num_card_style = {\n          backgroundColor: ''\n        };\n\n        if (asses[key][ass]['completed']) {\n          ass_num_card_style['backgroundColor'] = '#6bff9c';\n        } else if (today > dat) {\n          ass_num_card_style['backgroundColor'] = '#ff6961';\n        } else if (new Date(today).setUTCDate(today.getUTCDate() + 8) > dat) {\n          ass_num_card_style['backgroundColor'] = '#FFE27C';\n        } else {\n          ass_num_card_style['backgroundColor'] = '#BCBCBC';\n        }\n\n        var display_me = undefined;\n        if (editing) display_me = displayedAss;else display_me = newDisplayedAss; //If this is our first time running this code then set our displayedAss var\n\n        if (firstTime) {\n          setDisplayedAss(newDisplayedAss);\n          setFirstTime(false); //Make sure we never set displayed ass in here again\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key + ass,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: \"ass-num-card\",\n          style: ass_num_card_style,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-grid\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field card-item-1\",\n          onChange: function onChange(e) {\n            setDisplayedAss(onDateChange(e, display_me, key_index, ass_index));\n            setEditing(true);\n            setRereun(!rerun);\n          },\n          style: ass_num_card_style,\n          value: display_me[key_index][ass_index]['date'],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field card-item-2\",\n          onChange: function onChange(e) {\n            setDisplayedAss(onTimeChange(e, display_me, key_index, ass_index));\n            setEditing(true);\n            setRereun(!rerun);\n          },\n          style: ass_num_card_style,\n          value: display_me[key_index][ass_index]['time'],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input-field card-item-3\",\n          onChange: function onChange(e) {\n            setDisplayedAss(onGradeChange(e, display_me, key_index, ass_index));\n            setEditing(true);\n            setRereun(!rerun);\n          },\n          style: ass_num_card_style,\n          value: display_me[key_index][ass_index]['grade'],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }\n        }))));\n      }); //What to display for the class average\n\n      if (isNaN(ass_type_averages[key])) {\n        ass_type_averages[key] = 'N/A';\n      }\n\n      var button = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n      if (editing) {\n        button = /*#__PURE__*/React.createElement(Button, {\n          className: \"class-save-button\",\n          onClick: function onClick() {\n            onSaveClick(displayedAss, asses);\n            setEditing(false);\n            setReload(!reload);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 26\n          }\n        }, \"Save\");\n      }\n\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"assignment-type-indiv\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"card-title\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, key), \"Average: \", Number(ass_type_averages[key]).toFixed(2), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, ass_cards), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, button));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navibar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), return_class_card, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assignment-type-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, cards));\n} // let ass_type = {0: {date: '08/03', time: '11:59', grade: '0'}, 1: {date: '08/05', time: '11:59', grade: '0'}, 2: {date: '08/06', time: '11:59', grade: '0'}, 3: {date: '08/07', time: '11:59', grade: '0'}}\n\n\nfunction onDateChange(event, newDisplayedAssignment, key, assignment) {\n  newDisplayedAssignment[key][parseInt(assignment)]['date'] = event.target.value;\n  return newDisplayedAssignment;\n}\n\nfunction onTimeChange(e, newDisplayedAss, key, ass) {\n  newDisplayedAss[key][ass]['time'] = e.target.value;\n  return newDisplayedAss;\n}\n\nfunction onGradeChange(e, newDisplayedAss, key, ass) {\n  newDisplayedAss[key][ass]['grade'] = e.target.value;\n  return newDisplayedAss;\n}\n\nfunction onSaveClick(newDisplayedAss, asses) {\n  //I want to check which fields I actually changed\n  var changed_assignments = [];\n  var hold_me = createDisplayOject(asses);\n  Object.keys(hold_me).forEach(function (key, key_index) {\n    hold_me[key].forEach(function (ass, index) {\n      if (!haveSameData(ass, newDisplayedAss[key][index])) changed_assignments.push({\n        key: key,\n        ass_index: index\n      });\n    });\n  }); //Confirm all changes are valid\n\n  changed_assignments.forEach(function (changed_ass) {\n    //First parse date\n    var date = newDisplayedAss[changed_ass['key']][changed_ass['ass_index']]['date'];\n    var date_regex = new RegExp('([0-1])?[0-9]\\/[0-3]?[0-9]');\n    var date_result = date_regex.exec(date);\n\n    if (date_result === null) {\n      console.log(\"Couldn't parse date\");\n      return;\n    } //Next parse time\n\n\n    var time = newDisplayedAss[changed_ass['key']][changed_ass['ass_index']]['time'];\n    var time_regex = new RegExp('([0-1])?[0-9]:[0-5][0-9]');\n    var time_result = time_regex.exec(time);\n\n    if (time_result === null) {\n      console.log(\"Couldn't parse time\");\n      return;\n    }\n\n    var grade = newDisplayedAss[changed_ass['key']][changed_ass['ass_index']]['grade'];\n    var grade_regex = new RegExp('(1?[0-9][0-9])(.[0-9][0-9]?)?');\n\n    if (grade_regex.exec(grade) === null && grade !== 'Grade: n/a') {\n      console.log(\"Couldn't parse grade\");\n      return;\n    }\n\n    var valid_grade = grade_regex.exec(grade);\n    if (valid_grade == null) valid_grade = 0;else valid_grade = parseFloat(valid_grade[0]);\n\n    try {\n      var valid_date = new Date();\n\n      if (date_result[0].length === 4) {\n        valid_date.setUTCMonth(parseInt(date_result[0].slice(0, 1)) - 1);\n        valid_date.setUTCDate(parseInt(date_result[0].slice(2, 4)));\n      } else {\n        valid_date.setUTCMonth(parseInt(date_result[0].slice(0, 2)) - 1);\n        valid_date.setUTCDate(parseInt(date_result[0].slice(3, 5)));\n      }\n\n      if (time_result[0].length === 4) {\n        valid_date.setUTCHours(parseInt(time_result[0].slice(0, 1)));\n        valid_date.setUTCMinutes(parseInt(time_result[0].slice(2, 4)));\n      } else {\n        valid_date.setUTCHours(parseInt(time_result[0].slice(0, 2)));\n        valid_date.setUTCMinutes(parseInt(time_result[0].slice(3, 5)));\n      }\n\n      var newData = {\n        'due_date': valid_date,\n        'grade': valid_grade\n      };\n      updateAssignment(asses[Object.keys(asses)[changed_ass['key']]][0]['assignmentType'], changed_ass['ass_index'], newData);\n    } catch (_unused) {\n      console.log(\"idk, it failed\");\n      return;\n    }\n  });\n}\n\nfunction createDisplayOject(asses) {\n  var newDisplayedAss = [];\n  Object.keys(asses).map(function (key, key_index) {\n    Object.keys(asses[key]).map(function (ass, ass_index) {\n      if (ass_index === asses[key].length - 1) return; //Create the readable date\n\n      var dat = new Date(asses[key][ass]['due_date']);\n      var month = dat.getUTCMonth() + 1 < 10 ? '0' + (dat.getUTCMonth() + 1) : dat.getUTCMonth() + 1;\n      var day = dat.getUTCDate() < 10 ? '0' + dat.getUTCDate() : dat.getUTCDate();\n      var readable_date = month + '/' + day; //-----------------------\n      //Create readable time\n\n      var hours = dat.getUTCHours();\n      var minutes = dat.getUTCMinutes();\n      minutes = minutes < 10 ? '0' + minutes : minutes;\n      var time = '';\n\n      if (hours > 12) {\n        hours -= 12;\n        time = hours + ':' + minutes + ' pm';\n      } else if (hours == 0) {\n        time = '12:' + minutes + ' am';\n      } else {\n        time = hours + ':' + minutes + ' am';\n      } //---------------------\n      //Create readable grade\n\n\n      var grade = asses[key][ass]['grade'] == 0 ? 'Grade: ' + 'n/a' : 'Grade: ' + asses[key][ass]['grade']; //---------------------\n      //Create displayed object \n\n      var ass_display = {\n        'date': readable_date,\n        'time': time,\n        'grade': grade\n      }; //Check if the key and ass exist\n\n      if (newDisplayedAss[key_index] !== undefined) {\n        if (newDisplayedAss[key_index][ass_index] !== undefined) newDisplayedAss[key_index][ass_index] = _objectSpread({}, ass_display);else newDisplayedAss[key_index].push(_objectSpread({}, ass_display));\n      } else {\n        newDisplayedAss[key_index] = [];\n        newDisplayedAss[key_index].push(_objectSpread({}, ass_display));\n      }\n    });\n  });\n  return newDisplayedAss;\n}\n\nvar haveSameData = function haveSameData(obj1, obj2) {\n  var obj1Length = Object.keys(obj1).length;\n  var obj2Length = Object.keys(obj2).length;\n\n  if (obj1Length === obj2Length) {\n    return Object.keys(obj1).every(function (key) {\n      return obj2.hasOwnProperty(key) && obj2[key] === obj1[key];\n    });\n  }\n\n  return false;\n};\n\nexport default ClassPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","getAssignmentTypesForClass","updateAssignment","Navibar","Card","Button","ClassPage","params","assesGotten","setAssesGotten","asses","setAsses","displayedAss","setDisplayedAss","editing","setEditing","firstTime","setFirstTime","rerun","setRereun","reload","setReload","promise","then","data","cards","today","Date","return_class_card","ass_type_averages","total_average","ass_type_count","total_weight","Object","keys","forEach","key","key_index","sum","count","ass","ass_index","parseFloat","isNaN","weighted_avg","length","toFixed","newDisplayedAss","createDisplayOject","map","ass_cards","dat","ass_num_card_style","backgroundColor","setUTCDate","getUTCDate","display_me","undefined","e","onDateChange","onTimeChange","onGradeChange","button","onSaveClick","Number","event","newDisplayedAssignment","assignment","parseInt","target","value","changed_assignments","hold_me","index","haveSameData","push","changed_ass","date","date_regex","RegExp","date_result","exec","console","log","time","time_regex","time_result","grade","grade_regex","valid_grade","valid_date","setUTCMonth","slice","setUTCHours","setUTCMinutes","newData","month","getUTCMonth","day","readable_date","hours","getUTCHours","minutes","getUTCMinutes","ass_display","obj1","obj2","obj1Length","obj2Length","every","hasOwnProperty"],"sources":["C:/Users/colli/Documents/Github/Sundays-Frontend/src/Components/ClassPage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport '../App.css';\r\nimport '../Component-CSS/ClassPage.css';\r\nimport {useParams} from 'react-router-dom';\r\nimport { getAssignmentTypesForClass, updateAssignment} from '../services';\r\nimport Navibar from './Navibar';\r\nimport {Card, Button} from 'react-bootstrap';\r\n\r\nfunction ClassPage (){\r\n\r\n    const params = useParams();\r\n    const [assesGotten, setAssesGotten] = useState(false);\r\n    const [asses, setAsses] = useState({});\r\n    const [displayedAss, setDisplayedAss] = useState([[]]);\r\n    const [editing, setEditing] = useState(false);\r\n    const [firstTime, setFirstTime] = useState(true);\r\n    const [rerun, setRereun] = useState(false);\r\n    const [reload, setReload] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const promise = getAssignmentTypesForClass(params['id']);\r\n\r\n        promise.then((data) => {\r\n            setAsses(data);\r\n            setAssesGotten(true);\r\n        });\r\n    },[reload]);\r\n\r\n    let cards = <div></div>;\r\n    const today = new Date();\r\n    \r\n    let return_class_card = <div></div>\r\n    if(assesGotten){\r\n\r\n        //Hold array of assignmen type averages\r\n        let ass_type_averages = []\r\n\r\n        let total_average = 0\r\n        let ass_type_count = 0\r\n        let total_weight = 0\r\n\r\n        //Calculate the average for each assignment type\r\n        Object.keys(asses).forEach((key, key_index) => {\r\n            let sum = 0;\r\n            let count = 0;\r\n            Object.keys(asses[key]).forEach((ass, ass_index) => {\r\n                if(asses[key][ass]['completed']){\r\n                    count += 1\r\n                    sum = sum + parseFloat(asses[key][ass]['grade'])\r\n                }\r\n            })\r\n\r\n            ass_type_averages[key] = sum / count;\r\n            if(ass_type_averages[key] != 0 && !isNaN(ass_type_averages[key])){\r\n                const weighted_avg = (parseFloat(ass_type_averages[key]) * parseFloat(asses[key][asses[key].length - 1] / 100))\r\n                total_average += weighted_avg\r\n                ass_type_count++;\r\n                total_weight += asses[key][asses[key].length - 1]\r\n            }\r\n        });\r\n\r\n        total_average = total_average * (100 / total_weight)\r\n        \r\n        return_class_card = <div className=\"class-avg-card\">\r\n            <Card>\r\n                <Card.Title>Class Average</Card.Title>\r\n                <Card.Body>{total_average.toFixed(2)}</Card.Body>\r\n            </Card>\r\n        </div>\r\n\r\n        let newDisplayedAss = createDisplayOject(asses);\r\n        cards = Object.keys(asses).map((key, key_index) => {\r\n            const ass_cards = Object.keys(asses[key]).map((ass, ass_index) => {\r\n\r\n                if(ass_index === asses[key].length - 1)\r\n                    return\r\n\r\n                //Create the readable date\r\n                const dat = new Date(asses[key][ass]['due_date']);\r\n\r\n                //Display a color based on the due date for the assignment\r\n                let ass_num_card_style = {backgroundColor: ''};\r\n\r\n                if (asses[key][ass]['completed']){\r\n                    ass_num_card_style['backgroundColor'] = '#6bff9c';\r\n                }\r\n                else if(today > dat){\r\n                    ass_num_card_style['backgroundColor'] = '#ff6961';\r\n                }\r\n                else if(new Date(today).setUTCDate(today.getUTCDate() + 8) > dat){\r\n                    ass_num_card_style['backgroundColor'] = '#FFE27C';\r\n                }\r\n                else{\r\n                    ass_num_card_style['backgroundColor'] = '#BCBCBC';\r\n                }\r\n\r\n                let display_me = undefined;\r\n                if(editing)\r\n                    display_me = displayedAss;\r\n                else\r\n                    display_me = newDisplayedAss;\r\n\r\n                //If this is our first time running this code then set our displayedAss var\r\n                if(firstTime){\r\n                    setDisplayedAss(newDisplayedAss);\r\n                    setFirstTime(false); //Make sure we never set displayed ass in here again\r\n                }\r\n\r\n                return(\r\n                    <div key={key + ass}>\r\n                        <Card className = \"ass-num-card\" style={ass_num_card_style}>\r\n                            <div className=\"input-grid\">\r\n                                <input type='text' className='input-field card-item-1' onChange={(e) => {setDisplayedAss(onDateChange(e, display_me, key_index, ass_index)); setEditing(true); setRereun(!rerun);}} style={ass_num_card_style} value={display_me[key_index][ass_index]['date']} />\r\n                                <input type='text' className='input-field card-item-2' onChange={(e) => {setDisplayedAss(onTimeChange(e, display_me, key_index, ass_index)); setEditing(true); setRereun(!rerun);}} style={ass_num_card_style} value={display_me[key_index][ass_index]['time']} />\r\n                                <input type='text' className='input-field card-item-3' onChange={(e) => {setDisplayedAss(onGradeChange(e, display_me, key_index, ass_index)); setEditing(true); setRereun(!rerun);}} style={ass_num_card_style} value={display_me[key_index][ass_index]['grade']} />\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            //What to display for the class average\r\n            if(isNaN(ass_type_averages[key])){\r\n                ass_type_averages[key] = 'N/A'\r\n            }\r\n\r\n            let button = <></>\r\n            if(editing){\r\n                button = <Button className=\"class-save-button\" onClick={() => {onSaveClick(displayedAss, asses); setEditing(false); setReload(!reload)}}>Save</Button>\r\n            }\r\n\r\n            return(\r\n                <Card className = \"assignment-type-indiv\">\r\n                    <Card.Title className=\"card-title\">{key}</Card.Title>\r\n                    Average: {Number(ass_type_averages[key]).toFixed(2)}\r\n                    <hr />\r\n                    <Card.Body>{ass_cards}</Card.Body>\r\n                    <div className=\"center\">\r\n                        {button}\r\n                    </div>\r\n                </Card>\r\n            );\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            <Navibar />\r\n            {return_class_card}\r\n            <div className=\"assignment-type-cards\">\r\n                {cards}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// let ass_type = {0: {date: '08/03', time: '11:59', grade: '0'}, 1: {date: '08/05', time: '11:59', grade: '0'}, 2: {date: '08/06', time: '11:59', grade: '0'}, 3: {date: '08/07', time: '11:59', grade: '0'}}\r\n\r\nfunction onDateChange(event, newDisplayedAssignment, key, assignment) {\r\n    newDisplayedAssignment[key][parseInt(assignment)]['date'] = event.target.value;\r\n    return newDisplayedAssignment;\r\n}\r\n\r\nfunction onTimeChange(e, newDisplayedAss, key, ass) {\r\n    newDisplayedAss[key][ass]['time'] = e.target.value;\r\n    return newDisplayedAss;\r\n}\r\nfunction onGradeChange(e, newDisplayedAss, key, ass) {\r\n    newDisplayedAss[key][ass]['grade'] = e.target.value;\r\n    return newDisplayedAss;\r\n}\r\n\r\nfunction onSaveClick(newDisplayedAss, asses){\r\n\r\n    //I want to check which fields I actually changed\r\n    let changed_assignments = []\r\n\r\n    const hold_me = createDisplayOject(asses);\r\n\r\n    Object.keys(hold_me).forEach((key, key_index) => {\r\n        hold_me[key].forEach((ass, index) => {\r\n            if(!haveSameData(ass, newDisplayedAss[key][index]))\r\n                changed_assignments.push({key: key, ass_index: index})\r\n        })\r\n    })\r\n\r\n    //Confirm all changes are valid\r\n\r\n    changed_assignments.forEach((changed_ass) => {\r\n        //First parse date\r\n        const date = newDisplayedAss[changed_ass['key']][changed_ass['ass_index']]['date'];\r\n        const date_regex = new RegExp('([0-1])?[0-9]\\/[0-3]?[0-9]');\r\n        const date_result = date_regex.exec(date)\r\n        if(date_result === null){\r\n            console.log(\"Couldn't parse date\")\r\n            return;\r\n        }\r\n\r\n        //Next parse time\r\n        const time = newDisplayedAss[changed_ass['key']][changed_ass['ass_index']]['time'];\r\n        const time_regex = new RegExp('([0-1])?[0-9]:[0-5][0-9]');\r\n        const time_result = time_regex.exec(time)\r\n        if(time_result === null){\r\n            console.log(\"Couldn't parse time\")\r\n            return;\r\n        }\r\n\r\n        const grade = newDisplayedAss[changed_ass['key']][changed_ass['ass_index']]['grade'];\r\n        const grade_regex = new RegExp('(1?[0-9][0-9])(.[0-9][0-9]?)?');\r\n        if(grade_regex.exec(grade) === null && grade !== 'Grade: n/a'){\r\n            console.log(\"Couldn't parse grade\")\r\n            return;\r\n        }\r\n\r\n        let valid_grade = grade_regex.exec(grade);\r\n        \r\n        if(valid_grade == null)\r\n            valid_grade = 0;\r\n        else\r\n            valid_grade = parseFloat(valid_grade[0])\r\n\r\n        try{\r\n            let valid_date = new Date();\r\n\r\n            if(date_result[0].length === 4){\r\n                valid_date.setUTCMonth(parseInt(date_result[0].slice(0, 1)) - 1)\r\n                valid_date.setUTCDate(parseInt(date_result[0].slice(2, 4)))\r\n            }\r\n            else{\r\n                valid_date.setUTCMonth(parseInt(date_result[0].slice(0, 2)) - 1)\r\n                valid_date.setUTCDate(parseInt(date_result[0].slice(3, 5)))\r\n            }\r\n\r\n            if(time_result[0].length === 4){\r\n                valid_date.setUTCHours(parseInt(time_result[0].slice(0, 1)))\r\n                valid_date.setUTCMinutes(parseInt(time_result[0].slice(2, 4)))\r\n            }\r\n            else{\r\n                valid_date.setUTCHours(parseInt(time_result[0].slice(0, 2)))\r\n                valid_date.setUTCMinutes(parseInt(time_result[0].slice(3, 5)))\r\n            }\r\n\r\n            const newData = {'due_date': valid_date, 'grade': valid_grade}\r\n            updateAssignment(asses[Object.keys(asses)[changed_ass['key']]][0]['assignmentType'], changed_ass['ass_index'], newData)\r\n        }\r\n        catch{\r\n            console.log(\"idk, it failed\");\r\n            return;\r\n        }\r\n    })\r\n}\r\n\r\nfunction createDisplayOject(asses){\r\n    let newDisplayedAss = [];\r\n    Object.keys(asses).map((key, key_index) => {\r\n        Object.keys(asses[key]).map((ass, ass_index) => {\r\n\r\n            if(ass_index === asses[key].length - 1)\r\n                return\r\n\r\n            //Create the readable date\r\n            const dat = new Date(asses[key][ass]['due_date']);\r\n            const month = (dat.getUTCMonth() + 1) < 10 ? '0' + (dat.getUTCMonth() + 1) : (dat.getUTCMonth() + 1);\r\n            const day = (dat.getUTCDate()) < 10 ? '0' + (dat.getUTCDate()) : (dat.getUTCDate());\r\n\r\n            const readable_date = month +'/'+ day;\r\n            //-----------------------\r\n\r\n            //Create readable time\r\n            let hours = dat.getUTCHours();  \r\n            let minutes = dat.getUTCMinutes();\r\n\r\n            minutes = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n            let time = '';\r\n        \r\n            if(hours > 12){\r\n                hours -= 12;\r\n                time = hours + ':' + minutes + ' pm';\r\n            }\r\n            else if(hours == 0){\r\n                time = '12:' + minutes + ' am';\r\n            }\r\n            else{\r\n                time = hours + ':' + minutes + ' am';\r\n            }\r\n            //---------------------\r\n\r\n            //Create readable grade\r\n            const grade = asses[key][ass]['grade'] == 0 ? 'Grade: ' + 'n/a' : 'Grade: ' + asses[key][ass]['grade'];\r\n            //---------------------\r\n            \r\n            //Create displayed object \r\n            const ass_display = {\r\n                'date': readable_date,\r\n                'time': time,\r\n                'grade': grade,\r\n            }\r\n\r\n            //Check if the key and ass exist\r\n            if(newDisplayedAss[key_index] !== undefined){\r\n                if(newDisplayedAss[key_index][ass_index] !== undefined)\r\n                    newDisplayedAss[key_index][ass_index] = ({...ass_display})\r\n                else\r\n                    newDisplayedAss[key_index].push({...ass_display})\r\n            }\r\n            else{\r\n                newDisplayedAss[key_index] = []\r\n                newDisplayedAss[key_index].push({...ass_display});\r\n            }\r\n        });\r\n    });\r\n\r\n    return newDisplayedAss;\r\n}\r\n\r\nconst haveSameData = function (obj1, obj2) {\r\n    const obj1Length = Object.keys(obj1).length;\r\n    const obj2Length = Object.keys(obj2).length;\r\n\r\n    if (obj1Length === obj2Length) {\r\n        return Object.keys(obj1).every(\r\n            key => obj2.hasOwnProperty(key)\r\n                && obj2[key] === obj1[key]);\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default ClassPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}